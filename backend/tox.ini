[tox]
envlist = py39,pep8
isolated_build = true

[testenv]
passenv = DATABASE_URL
setenv =
  WOD_BOARD_ENV = test
deps =
  pytest
  pytest-asyncio
  httpx
  poetry
commands_pre = poetry install -v
commands =
  poetry run pytest {posargs}

[testenv:db_revision]
setenv =
deps =
    poetry
    black
    isort
commands = poetry run alembic revision --autogenerate {posargs}

[testenv:db_upgrade]
setenv =
deps = poetry
commands = poetry run alembic upgrade head

[testenv:db_downgrade]
setenv =
deps = poetry
commands = poetry run alembic downgrade {posargs}

[testenv:start]
setenv =
commands =
  {[testenv:db_upgrade]commands}
  poetry run uvicorn wod_board.web:app --reload --port 8500

[testenv:prod]
setenv =
deps = poetry
commands =
  {[testenv:db_upgrade]commands}

[testenv:pep8]
deps =
    black
    flake8
    isort
    mypy
    sqlalchemy2-stubs
    poetry
commands =
    poetry run black --check wod_board
    poetry run flake8
    poetry run isort -c wod_board
    poetry run mypy

[testenv:coverage]
setenv = {[testenv]setenv}
passenv =
  {[testenv]passenv}
  COVERALLS_REPO_TOKEN
deps =
  {[testenv]deps}
  coverage
  coveralls
allowlist_externals = bash
commands =
  poetry run coverage run -m pytest
  poetry run coverage report
  poetry run coverage html
  bash -c 'if [ $COVERALLS_REPO_TOKEN ]; then poetry run coveralls; fi'

[coverage:report]
omit =
  .tox/*
  */migrations/*
  */tests/*

[flake8]
exclude = .tox,frontend,alembic
max-line-length = 88
extend-ignore = E203, E231, W503, D100

[isort]
force_single_line = true
lines_after_imports = 2
force_sort_within_sections = true
known_first_party = wod_board
known_third_party = fastapi, sqlalchemy
default_section = THIRDPARTY
skip = .tox,frontend
